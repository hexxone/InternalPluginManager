<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blockhaus2000</groupId>
	<artifactId>internalpluginmanager-parent</artifactId>
	<version>2.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<!-- The Maven plugin does not depent on anything else, so it can be built 
			at first. -->
		<module>internalpluginmanager-maven-plugin</module>

		<!-- The base is used by every other module, so build as first. -->
		<module>internalpluginmanager-base-api</module>

		<!-- These modules are completly independent from each other, so this order 
			is not important. -->
		<module>internalpluginmanager-command-api</module>
		<module>internalpluginmanager-configuration-api</module>
		<module>internalpluginmanager-event-api</module>
		<module>internalpluginmanager-format-api</module>
		<module>internalpluginmanager-scheduler-api</module>

		<!-- The plugin API depends on the command, config, event, format and scheduler 
			API, so build after them all. -->
		<module>internalpluginmanager-plugin-api</module>

		<!-- The main API contains all other APIs, so build at last of the (main) 
			APIs. -->
		<module>internalpluginmanager-api</module>

		<!-- The extensions should be allowed to use all APIs, so build after them 
			all (including the main API). -->
		<module>internalpluginmanager-extension</module>

		<!-- The standalone version of the main API. Is independent from the Minecraft 
			stuff. -->
		<module>internalpluginmanager-standalone</module>

		<!-- The Minecraft API depends on the main API. -->
		<module>internalpluginmanager-minecraft-api</module>

		<!-- The Minecraft API implementations are depending on the Minecraft API, 
			so build after it. -->
		<module>internalpluginmanager-minecraft-bukkit</module>
		<module>internalpluginmanager-minecraft-canary</module>

		<!-- The assembly. Packs the runnable version into a ZIP-file. -->
		<module>internalpluginmanager-distribution</module>
	</modules>

	<!-- Some important project properties -->
	<properties>
		<!-- License Stuff -->
		<project.properties.license.name>GNU General Public License 3.0</project.properties.license.name>
		<project.properties.license.url>http://www.gnu.org/licenses/</project.properties.license.url>

		<!-- The encoding to use everywhere -->
		<project.properties.encoding>UTF-8</project.properties.encoding>

		<!-- Java Version -->
		<project.properties.javaVersion>1.6</project.properties.javaVersion>

		<!-- Fix encoding warnings -->
		<project.build.sourceEncoding>${project.properties.encoding}</project.build.sourceEncoding>

		<!-- The previous version of the InternalPluginManager. This has to be 
			changed every time a release is executed! -->
		<project.prevVersion>2.0.0</project.prevVersion>
	</properties>


	<!-- ===== Project Information ===== -->

	<name>InternalPluginManager</name>
	<description>Please lookup README file.</description>

	<inceptionYear>2014</inceptionYear>
	<url>https://www.blockhaus2000.com/projects/internalpluginmanager/</url>

	<licenses>
		<license>
			<name>${project.properties.license.name}</name>
			<url>${project.properties.license.url}</url>
		</license>
	</licenses>

	<organization>
		<name>Blockhaus2000</name>
		<url>http://www.blockhaus2000.com/</url>
	</organization>

	<developers>
		<developer>
			<id>fabian</id>
			<name>Fabian Damken</name>
			<email>fabian@blockhaus2000.com</email>
			<url>http://www.blockhaus2000.com/</url>
			<organization>${project.organization.name}</organization>
			<organizationUrl>${project.organization.url}</organizationUrl>
			<roles>
				<role>architect</role>
				<role>product-owner</role>
				<role>project-manager</role>
				<role>head-of-developer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
	</developers>

	<issueManagement>
		<system>MantisBT</system>
		<url>http://issues.blockhaus2000.com/</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com/Blockhaus2000/InternalPluginManager.git</connection>
		<developerConnection>scm:git:git@github.com:Blockhaus2000/InternalPluginManager.git</developerConnection>
		<url>https://www.github.com/Blockhaus2000/InternalPluginManager/</url>
		<tag>HEAD</tag>
	</scm>

	<prerequisites>
		<maven>3.0.5</maven>
	</prerequisites>


	<!-- ===== Distribution Management ===== -->

	<distributionManagement>
		<!-- Releases will be deployed here -->
		<repository>
			<id>blockhaus2000-repo-ftp</id>
			<url>ftp://repo.blockhaus2000.com/</url>
		</repository>

		<!-- Snapshots will be deployed here -->
		<snapshotRepository>
			<id>blockhaus2000-snap-repo-ftp</id>
			<url>ftp://snap-repo.blockhaus2000.com/</url>
		</snapshotRepository>

		<!-- Documentation/Site will be deployed here -->
		<site>
			<id>blockhaus2000-docs-ftp</id>
			<url>ftp://docs.blockhaus2000.com/ipm/${project.version}/</url>
		</site>
	</distributionManagement>


	<!-- Plugin Repositories ===== -->

	<pluginRepositories>
		<pluginRepository>
			<id>blockhaus2000-plugin-repo</id>
			<url>http://repo.blockhaus2000.com</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>blockhaus2000-plugin-snap-repo</id>
			<url>http://snap-repo.blockhaus2000.com</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<!-- ===== Dependencies ===== -->

	<repositories>
		<repository>
			<id>blockhaus2000-repo</id>
			<url>http://repo.blockhaus2000.com</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>blockhaus2000-snap-repo</id>
			<url>http://snap-repo.blockhaus2000.com</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- Used for unit tests. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<!-- ===== Build ===== -->

	<build>
		<finalName>${project.artifactId}_v${project.version}_${buildNumber}</finalName>

		<plugins>
			<!-- Compiler settings. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${project.properties.javaVersion}</source>
					<target>${project.properties.javaVersion}</target>
					<encoding>${project.properties.encoding}</encoding>
				</configuration>
			</plugin>

			<!-- Generates build numbers. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>create-buildnumber</id>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyyMMdd-HHmmss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>

			<!-- Test runner. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>

			<!-- Test test coverage. -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dataFile>${project.build.directory}/jacoco.exec</dataFile>
					<propertyName>surefireArgLine</propertyName>
				</configuration>
			</plugin>

			<!-- Check for backward compatibility. -->
			<plugin>
				<groupId>com.googlecode.japi-checker</groupId>
				<artifactId>japi-checker-maven-plugin</artifactId>
				<version>0.2.0</version>
				<executions>
					<!-- The lifecycle phase "never" does not exist, so this plugin will 
						not be executed. This is correct, because this plugin is not executable on 
						the parent pom because of varios reasons. Thus, not every module has to be 
						backwards compatible. -->
					<!-- So the modules that has to execute this will also have an execution 
						with the same id to override the execution phase and to take over the configuration 
						for the specific execution. -->
					<!-- Sadly, a new execution has to be created for every version to check 
						for backward compatibility, cause the japi-checker-maven-plugin does not 
						accept more than one reference to check. -->

					<!-- Check backward compatibility to IPM version 2.0.0. -->
					<execution>
						<id>check-bc-2.0.0</id>
						<phase>never</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<reference>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<version>2.0.0</version>
							</reference>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<rules>
						<!-- Check everything. -->
						<rule>com.googlecode.japi.checker.rules.AllRules</rule>
					</rules>
				</configuration>
			</plugin>

			<!-- Package sources. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>package-source</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includePom>true</includePom>
				</configuration>
			</plugin>

			<!-- Clean up snapshot repository. -->
			<plugin>
				<groupId>com.blockhaus2000</groupId>
				<artifactId>repo-cleaner-maven-plugin</artifactId>
				<version>1.0.4</version>
				<configuration>
					<repository>
						<id>blockhaus2000-snap-repo-ftp</id>
						<url>ftp://snap-repo.blockhaus2000.com/</url>
					</repository>
					<artifactSet>
						<artifact>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
						</artifact>
					</artifactSet>
				</configuration>
			</plugin>
		</plugins>

		<extensions>
			<!-- Used as repository connector. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.5</version>
			</extension>
		</extensions>
	</build>


	<!-- ===== Reporting ===== -->

	<reporting>
		<plugins>
			<!-- The Maven reports plugin. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<indentSize>4</indentSize>
				</configuration>
			</plugin>

			<!-- The site plugin. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<locales>en_EN</locales>
				</configuration>
			</plugin>

			<!-- Include test results. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<alwaysGenerateSurefireReport>false</alwaysGenerateSurefireReport>
				</configuration>
			</plugin>

			<!-- Include test coverage. -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<configuration>
					<dataFile>${project.build.directory}/jacoco.exec</dataFile>
					<haltOnFailure>false</haltOnFailure>
					<rules>
						<rule>
							<element>METHOD</element>
							<limits>
								<limit>
									<counter>COMPLEXITY</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.75</minimum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>
			</plugin>

			<!-- Check style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<encoding>${project.properties.encoding}</encoding>
					<logViolationsToConsole>true</logViolationsToConsole>
					<violationSeverity>warning</violationSeverity>
					<failOnViolation>false</failOnViolation>
					<failsOnError>false</failsOnError>
				</configuration>
			</plugin>

			<!-- Find common bugs. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<effort>Max</effort>
					<failOnError>false</failOnError>
					<fork>false</fork>
					<includeTests>true</includeTests>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>

			<!-- Generate Javadoc. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<reportSets>
					<reportSet>
						<id>generate-javadoc</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<author>false</author>
					<bottom>Copyright &#169;
						${project.inceptionYear}&#x2013;{currentYear}
						${project.organization.name} (${project.organization.url}).
						Licensed under ${project.properties.license.name}
						(${project.properties.license.url}).</bottom>
					<charset>${project.properties.encoding}</charset>
					<encoding>${project.properties.encoding}</encoding>
					<failOnError>false</failOnError>
					<linksource>true</linksource>
					<show>private</show>
					<source>${project.properties.javaVersion}</source>
					<sourcetab>4</sourcetab>
				</configuration>
			</plugin>

			<!-- Generate changelog. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<basedir>${project.basedir}</basedir>
					<issueIDRegexPattern>\d+</issueIDRegexPattern>
					<issueLinkUrl>http://issues.blockhaus2000.com/view.php?id=%ISSUE%</issueLinkUrl>
					<displayChangeSetDetailUrl>${project.scm.url}/commit/%REV%</displayChangeSetDetailUrl>
					<displayFileDetailUrl>${project.scm.url}/blob/master/%FILE%</displayFileDetailUrl>
					<displayFileRevDetailUrl>${project.scm.url}/blob/%REV%/%FILE%</displayFileRevDetailUrl>
					<type>range</type>
					<range>30</range>
				</configuration>
			</plugin>

			<!-- Find To-Do's. -->
			<plugin>
				<groupId>com.blockhaus2000</groupId>
				<artifactId>todo-finder-maven-plugin</artifactId>
				<version>1.4.4</version>
				<reportSets>
					<reportSet>
						<id>find-todos</id>
						<reports>
							<report>find</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<lowPriorityStrings>
						<lowPriorityString>IDEA</lowPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</lowPriorityStrings>
					<normalPriorityStrings>
						<normalPriorityString>TODO</normalPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</normalPriorityStrings>
					<highPriorityStrings>
						<highPriorityString>FIXME</highPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</highPriorityStrings>
					<failOnHighPriority>false</failOnHighPriority>
					<writeTodoList>false</writeTodoList>
					<excludeFiles>
						<excludeFile>.git/</excludeFile>
						<excludeFile>codetemplates.xml</excludeFile>
						<excludeFile>${project.build.directory}/</excludeFile>
						<excludeFile>dependency-reduced-pom.xml</excludeFile>
					</excludeFiles>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>release</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.12</version>
						<configuration>
							<failsOnError>true</failsOnError>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<failOnError>true</failOnError>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<type>tag</type>
							<tags>
								<tag>${project.version}</tag>
								<tag>${project.prevVersion}</tag>
							</tags>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.blockhaus2000</groupId>
						<artifactId>todo-finder-maven-plugin</artifactId>
						<version>1.4.4</version>
						<configuration>
							<failOnHighPriority>true</failOnHighPriority>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>reduce-memory</id>
			<properties>
				<findbugs.skip>true</findbugs.skip>
			</properties>
		</profile>
	</profiles>
</project>
