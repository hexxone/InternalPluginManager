<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blockhaus2000</groupId>
	<artifactId>InternalPluginManager</artifactId>
	<version>1.7.2</version>
	<packaging>jar</packaging>

	<!-- Fix encoding warnings -->
	<properties>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        </properties>


	<!--
	===============================
	===== Project Information =====
	===============================
	-->

	<name>InternalPluginManager</name>
	<inceptionYear>2014</inceptionYear>
	<url>https://www.github.com/Blockhaus2000/InternalPluginManager/</url>
	<description>An easy-to-use API that improves the command API from Bukkit. Also provides internal plugin management</description>

	<licenses>
		<license>
			<name>Apache License Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<issueManagement>
		<system>MantisBT</system>
		<url>http://issues.blockhaus2000.com/</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git://github.com/Blockhaus2000/InternalPluginManager.git</connection>
		<developerConnection>scm:git:git@github.com:Blockhaus2000/InternalPluginManager.git</developerConnection>
		<url>https://www.github.com/Blockhaus2000/InternalPluginManager/</url>
		<tag>master</tag>
	</scm>


	<!--
	===================================
	===== Distribution Management =====
	===================================
	-->

	<distributionManagement>
		<!-- The site will be deployed here -->
		<!--<site>
			<id>blockhaus2000-site-ftp</id>
			<url>ftp://docs.blockhaus2000.com/internalpluginmanager/</url>
		</site>-->

		<!-- Releases will be deployed here -->
		<repository>
			<id>blockhaus2000-repo-ftp</id>
			<url>ftp://repo.blockhaus2000.com/</url>
		</repository>
	</distributionManagement>


	<!--
	========================
	===== Dependencies =====
	========================
	-->

	<repositories>
		<repository>
			<id>bukkit-repo</id>
			<url>http://repo.bukkit.org/content/groups/public</url>
		</repository>
		<repository>
			<id>blockhaus2000-repo</id>
			<url>http://repo.blockhaus2000.com/</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Because this is a Bukkit plugin! -->
		<dependency>
			<groupId>org.bukkit</groupId>
			<artifactId>bukkit</artifactId>
			<version>1.7.5-R0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

		<!-- Used to store serializable objects easily -->
		<dependency>
			<groupId>com.blockhaus2000</groupId>
			<artifactId>tag-storage-system</artifactId>
			<version>2.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- Unit tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<!--
	=====================
	===== Reporting =====
	=====================
	-->

	<!--<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
		</plugins>
	</reporting>-->


	<!--
	=================
	===== Build =====
	=================
	-->

	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${project.artifactId}_v${project.version}-${buildNumber}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>

		<plugins>
			<!-- Compiler settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Used to deploy releaes -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<deployAtEnd>true</deployAtEnd>
				</configuration>
			</plugin>

			<!-- Generates JavaDoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>

			<!-- Test runner -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>

			<!-- We do not want to depend on more than Bukkit! -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<artifactSet>
						<includes>
							<include>com.blockhaus2000:tag-storage-system</include>
						</includes>
					</artifactSet>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JAR plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Vendor>Blockhaus2000</Implementation-Vendor>
							<Sealed>true</Sealed>
						</manifestEntries>
						<manifestSections>
							<manifestSection>
								<name>com/blockhaus2000/</name>
								<manifestEntries>
									<Sealed>true</Sealed>
								</manifestEntries>
							</manifestSection>
						</manifestSections>
					</archive>
				</configuration>
			</plugin>

			<!-- Replacement of some tags -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<configuration>
					<file>src/main/resources/plugin.yml</file>
					<outputFile>target/generated-resources/plugin.yml</outputFile>
					<regex>false</regex>
					<token>$project_version$</token>
					<value>${project.version}</value>
				</configuration>
			</plugin>

			<!-- Check style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<id>verify-style</id>
						<!--phase>validate</phase-->
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<logViolationsToConsole>true</logViolationsToConsole>

					<checkstyleRules>
						<module name="Checker">
							<!-- Do not use tabs! -->
							<module name="FileTabCharacter" />

							<module name="TreeWalker">
								<module name="OuterTypeFilename" />

								<!-- Utility classes will not have a constructor -->
								<module name="HideUtilityClassConstructor" />
								<module name="CovariantEquals" />

								<!-- You have to implement both equals() and hashCode() -->
								<module name="EqualsHashCode" />

								<module name="NestedTryDepth">
									<property name="max" value="2" />
								</module>

								<!-- If you override finalize(), you have to call super.finalize() -->
								<module name="SuperFinalize" />
								<module name="JUnitTestCase" />

								<!-- Left curly braces never goes to a new line -->
								<module name="LeftCurly">
									<property name="option" value="eol" />
								</module>

								<!-- In a switch...case structure, the default case comes at the end -->
								<module name="DefaultComesLast" />

								<module name="GenericWhitespace" />

								<!-- You have to follow these contributions! -->
								<module name="ClassTypeParameterName">
									<property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
								</module>
								<module name="LocalFinalVariableName" />
								<module name="LocalVariableName">
									<property name="format" value="^[a-z_][a-zA-Z0-9]*$" />
								</module>
								<module name="MemberName">
									<property name="format" value="^[a-z_][a-zA-Z0-9]*$" />
								</module>
								<module name="MethodName">
									<property name="format" value="^(_INVALID_)?[a-z][a-zA-Z0-9]*$" />
								</module>
								<module name="ParameterName" />
							</module>

							<!-- Please include the header in each file! -->
							<module name="Header">
								<property name="headerFile" value="src/main/build/header.txt" />
								<property name="fileExtensions" value="java" />
							</module>
						</module>
					</checkstyleRules>
				</configuration>
			</plugin>

			<!-- Generate build numbers -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--doCheck>true</doCheck>
					<doUpdate>true</doUpdate-->
					<item>timestamp</item>
					<shortRevisionLength>5</shortRevisionLength>
				</configuration>
			</plugin>

			<!-- Site builder -->
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
				<configuration>-->
					<!-- Project information -->
					<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>mavan-project-info-reports-plugin</artifactId>
						<version>2.5</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>license</report>
									<report>index</report>
									<report>javadoc</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>-->

					<!-- JavaDoc -->
					<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>mavan-javadoc-plugin</artifactId>
						<version>2.8.1</version>
					</plugin>
				</configuration>
			</plugin>-->
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources/</directory>
				<excludes>
					<exclude>plugin.yml</exclude> <!-- We do not want to include the raw plugin.yml -->
				</excludes>
			</resource>
			<resource>
				<directory>target/generated-resources/</directory>
				<includes>
                                        <include>plugin.yml</include> <!-- We want to use the plugin.yml with the corrent project version -->
                                </includes>
			</resource>
		</resources>

		<!-- Connecter to the deploy repository -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.5</version>
			</extension>
		</extensions>
	</build>
</project>
