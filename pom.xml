<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blockhaus2000</groupId>
	<artifactId>InternalPluginManager</artifactId>
	<version>1.9.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<!-- Some important project properties -->
	<properties>
		<!-- Fix encoding warings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- The Bukkit version to use -->
		<project.properties.bukkitVersion>1.7.9-R0.2</project.properties.bukkitVersion>

		<!-- The CraftBukkit jar name -->
		<project.properties.craftbukkitJarName>craftbukkit-1.7.9-R0.2-20140520.082451-2.jar</project.properties.craftbukkitJarName>

		<!-- This is were the checkstyle rules are defined -->
		<checkstyle.config.location>checkstyle.xml</checkstyle.config.location>
	</properties>


	<!-- ===== Project Information ===== -->

	<name>InternalPluginManager</name>
	<inceptionYear>2014</inceptionYear>
	<url>https://www.github.com/Blockhaus2000/InternalPluginManager/</url>
	<description>An easy-to-use API that improves the command API from Bukkit. Also provides internal plugin management</description>

	<licenses>
		<license>
			<name>Apache License Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<issueManagement>
		<system>MantisBT</system>
		<url>http://issues.blockhaus2000.com/</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com/Blockhaus2000/InternalPluginManager.git</connection>
		<developerConnection>scm:git:git@github.com:Blockhaus2000/InternalPluginManager.git</developerConnection>
		<url>https://www.github.com/Blockhaus2000/InternalPluginManager/</url>
	</scm>


	<!-- ===== Distribution Management ===== -->

	<distributionManagement>
		<!-- The site will be deployed here -->
		<!--
		<site>
			<id>blockhaus2000-site-ftp</id>
			<url>ftp://docs.blockhaus2000.com/internalpluginmanager/</url>
		</site>
		-->

		<!-- Releases will be deployed here -->
		<repository>
			<id>blockhaus2000-repo-ftp</id>
			<url>ftp://repo.blockhaus2000.com/</url>
		</repository>

		<!-- Snapshots will be deployed here -->
		<snapshotRepository>
			<id>blockhaus2000-snap-repo-ftp</id>
			<url>ftp://snap-repo.blockhaus2000.com/</url>
		</snapshotRepository>
	 </distributionManagement>


	<!-- Plugin Repositories ===== -->

	<pluginRepositories>
		<pluginRepository>
			<id>blockhaus2000-plugin-repo</id>
			<url>http://repo.blockhaus2000.com/</url>
		</pluginRepository>
	</pluginRepositories>


	<!-- ===== Dependencies ===== -->

	<repositories>
		<repository>
			<id>bukkit-repo</id>
			<url>http://repo.bukkit.org/content/groups/public</url>
		</repository>
		<repository>
			<id>blockhaus2000-repo</id>
			<url>http://repo.blockhaus2000.com/</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Because this is a Bukkit plugin! -->
		<dependency>
			<groupId>org.bukkit</groupId>
			<artifactId>bukkit</artifactId>
			<version>${project.properties.bukkitVersion}</version>
			<scope>compile</scope>
		</dependency>

		<!-- Used to store serializable objects easily -->
		<dependency>
			<groupId>com.blockhaus2000</groupId>
			<artifactId>tag-storage-system</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- Unit tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<!-- ===== Reporting ===== -->

	<!--<reporting> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-javadoc-plugin</artifactId> <version>2.9.1</version> </plugin> 
		</plugins> </reporting> -->


	<!-- ===== Build ===== -->

	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${project.artifactId}_v${project.version}-${buildNumber}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<defaultGoal>clean package install</defaultGoal>

		<plugins>
			<!-- Compiler settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Used to deploy releaes -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<deployAtEnd>true</deployAtEnd>
				</configuration>
			</plugin>

			<!-- Generates JavaDoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
			
			<!-- Packages source code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<!-- Test runner -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>

			<!-- We want to test some commands within a Bukkit server -->
			<plugin>
				<groupId>com.blockhaus2000</groupId>
				<artifactId>bukkit-tester-maven-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<executionDirectory>target/dist/</executionDirectory>
					<craftbukkitURL>http://repo.bukkit.org/content/repositories/public/org/bukkit/craftbukkit/${project.properties.bukkitVersion}/${project.properties.craftbukkitJarName}</craftbukkitURL>
					<craftbukkitFile>cache/${project.properties.craftbukkitJarName}</craftbukkitFile>
					<javaExecutionCommand>/usr/bin/java \
						-Dinternalpluginmanager.debug-mode=true -jar craftbukkit.jar</javaExecutionCommand>
					<failOnTestFailure>true</failOnTestFailure>
					<bukkitServerStartedIndicator>[START TESTS]</bukkitServerStartedIndicator>
					<testStartDelay>1000</testStartDelay>

					<plugins>
						<plugin>target/${project.artifactId}_v${project.version}-${buildNumber}.jar</plugin>
					</plugins>
					<testCommands>
						<!-- Enable the test command output. This is not a real test. -->
						<testCommand>internalpluginmanager debug</testCommand>

						<testCommand>testcase1</testCommand>
						<testCommand>testcase2</testCommand>
						<testCommand>testcase3 arg0</testCommand>
						<testCommand>testcase4 arg0 arg1</testCommand>
						<testCommand>testcase5 arg0</testCommand>
						<testCommand>testcase6</testCommand>
						<testCommand>testcase7 -a</testCommand>
						<testCommand>testcase8 -b</testCommand>
						<testCommand>testcase9 -b flag-b</testCommand>
						<testCommand>testcase10 -c 123456</testCommand>
						<testCommand>testcase11 -c int</testCommand>
						<testCommand>testcase12 -d "Flag value of d"</testCommand>
						<testCommand>testcase13</testCommand>
						<testCommand>testcase14 arg0 123456</testCommand>
						<testCommand>testcase15 arg0 arg1 vararg0</testCommand>
						<testCommand>testcase16 arg0 123456 vararg0 vararg1 vararg2</testCommand>
					</testCommands>
					<successfulIndicators>
						<!-- This is our regular succeed indicator -->
						<successfulIndicator>[TEST SUCCESSFUL]</successfulIndicator>
					</successfulIndicators>
					<failureIndicators>
						<!-- This is our regular fail indicator -->
						<failureIndicator>[TEST FAILED]</failureIndicator>

						<!-- Also we want to mark a test as failed if an Exception occures -->
						<failureIndicator>Exception</failureIndicator>

						<!-- Also if a command cannot be found -->
						<failureIndicator>Unknown command.</failureIndicator>
					</failureIndicators>
				</configuration>
			</plugin>

			<!-- We do not want to depend on more than Bukkit! -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactSet>
						<includes>
							<include>com.blockhaus2000:tag-storage-system</include>
						</includes>
					</artifactSet>
				</configuration>
			</plugin>

			<!-- JAR plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Vendor>Blockhaus2000</Implementation-Vendor>
							<Sealed>true</Sealed>
						</manifestEntries>
						<manifestSections>
							<manifestSection>
								<name>com/blockhaus2000/</name>
								<manifestEntries>
									<Sealed>true</Sealed>
								</manifestEntries>
							</manifestSection>
						</manifestSections>
					</archive>
				</configuration>
			</plugin>

			<!-- Replacement of some tags -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>src/main/resources/plugin.yml</file>
					<outputFile>target/generated-resources/plugin.yml</outputFile>
					<regex>false</regex>
					<token>$project_version$</token>
					<value>${project.version}</value>
				</configuration>
			</plugin>

			<!-- Check style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<logViolationsToConsole>true</logViolationsToConsole>
				</configuration>
			</plugin>

			<!-- Find TODO's --> <!-- //TODO-FINDER:IGNORE -->
			<plugin>
				<groupId>com.blockhaus2000</groupId>
				<artifactId>todo-finder-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>find</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<lowPriorityStrings>
						<lowPriorityString>IDEA</lowPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</lowPriorityStrings>
					<normalPriorityStrings>
						<normalPriorityString>TODO</normalPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</normalPriorityStrings>
					<highPriorityStrings>
						<highPriorityString>FIXME</highPriorityString> <!-- //TODO-FINDER:IGNORE -->
					</highPriorityStrings>
					<failOnHighPriority>false</failOnHighPriority>

					<excludeFiles>
						<excludeFile>dependency-reduced-pom.xml</excludeFile>
					</excludeFiles>
				</configuration>
			</plugin>

			<!-- Generate build numbers -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--doCheck>true</doCheck>-->
					<!--<doUpdate>true</doUpdate>-->
					<item>timestamp</item>
					<shortRevisionLength>5</shortRevisionLength>
				</configuration>
			</plugin>

			<!-- Used to automate the JavaDoc upload -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0-beta-5</version>
				<configuration>
					<serverId>blockhaus2000-docs-ftp</serverId>
					<url>ftp://docs.blockhaus2000.com</url>
					<fromDir>target/apidocs/</fromDir>
					<toDir>internalpluginmanager/${project.version}</toDir>
				</configuration>
			</plugin>

			<!-- Used for release automation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<username>Blockhaus2000</username>
					<checkModificationExcludes>
						<checkModificationExclude>todo.txt</checkModificationExclude>
					</checkModificationExcludes>
				</configuration>
			</plugin>

			<!-- Site builder -->
			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-site-plugin</artifactId> 
				<version>3.1</version> <configuration> -->
			<!-- Project information -->
			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>mavan-project-info-reports-plugin</artifactId> 
				<version>2.5</version> <reportSets> <reportSet> <reports> <report>license</report> 
				<report>index</report> <report>javadoc</report> </reports> </reportSet> </reportSets> 
				</plugin> -->

			<!-- JavaDoc -->
			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>mavan-javadoc-plugin</artifactId> 
				<version>2.8.1</version> </plugin> </configuration> </plugin> -->
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources/</directory>
				<excludes>
					<exclude>plugin.yml</exclude> <!-- We do not want to include the raw plugin.yml -->
				</excludes>
			</resource>
			<resource>
				<directory>target/generated-resources/</directory>
				<includes>
					<include>plugin.yml</include> <!-- We want to use the plugin.yml with the corrent project version -->
				</includes>
			</resource>
		</resources>

		<!-- Connecter to the deploy repository -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.5</version>
			</extension>
		</extensions>
	</build>


	<!-- ===== Profiles ===== -->

	<profiles>
		<profile>
			<id>Release</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<defaultGoal>release:clean release:prepare release:perform</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.blockhaus2000</groupId>
						<artifactId>bukkit-tester-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>bukkit-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>1.0-beta-5</version>
						<executions>
							<execution>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.blockhaus2000</groupId>
						<artifactId>todo-finder-maven-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<failOnHighPriority>true</failOnHighPriority>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<configuration>
							<value>${releaseVersion}</value>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>Snapshot</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<defaultGoal>clean <!--deploy-->install</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.blockhaus2000</groupId>
						<artifactId>bukkit-tester-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>bukkit-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>Nightly</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<defaultGoal>clean deploy</defaultGoal>
			</build>
		</profile>
	</profiles>
</project>
